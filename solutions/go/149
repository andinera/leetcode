func maxPoints(points [][]int) int {
    if len(points) <= 2 {
        return len(points)
    }
    max := 0

    for i := 0; i < len(points)-1; i++ {
        if len(points) - i < max {
            break
        }
        shelf := make(map[float64]int, 0)
        for j:= i+1; j < len(points); j++ {
            var angle float64
            var intercept float64
            if points[i][0] == points[j][0] {
                angle = 1234
                intercept = float64(points[i][0])
            } else {
                angle = (float64(points[i][1]) - float64(points[j][1])) / (float64(points[i][0]) - float64(points[j][0]))
                intercept = float64(points[i][1]) - (angle * float64(points[i][0]))
            }

            shelf[(angle*1000) + intercept]++
        }
        for _, value := range shelf {
            if value > max {
                max = value
            }
        }
    }

    return max + 1
}