/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
var result [][]int

func _zigzagLevelOrder(root *TreeNode, depth int) {
    if root != nil {
        if len(result) == depth {
            result = append(result, []int{root.Val})
        } else {
            if depth % 2 == 0 {
                result[depth] = append(result[depth], root.Val)
            } else {
                result[depth] = slices.Concat([]int{root.Val}, result[depth])
            }
        }
        _zigzagLevelOrder(root.Left, depth+1)
        _zigzagLevelOrder(root.Right, depth+1)
    }
}

func zigzagLevelOrder(root *TreeNode) [][]int {
    result = make([][]int, 0)
    _zigzagLevelOrder(root, 0)
    return result
}